% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learning_EM.R
\name{mcGrid}
\alias{mcGrid}
\title{Monte Carlo Grid Calculation}
\usage{
mcGrid(
  pars_R,
  brts,
  sample_size,
  maxN,
  soc = 2,
  max_missing,
  max_lambda,
  lower_bound,
  upper_bound,
  xtol_rel = 1e-05,
  num_threads
)
}
\arguments{
\item{pars_R}{Numeric matrix of parameters for the MCEM algorithm.}

\item{brts}{Numeric vector of branching times.}

\item{sample_size}{Integer, the number of samples to draw in the Monte Carlo simulation.}

\item{maxN}{Integer, the maximum number of iterations for the EM algorithm.}

\item{soc}{Numeric, scale parameter for optimization control. Defaults to 2.}

\item{max_missing}{Numeric, the maximum allowed missing information.}

\item{max_lambda}{Numeric, the maximum allowed lambda value.}

\item{lower_bound}{Numeric vector, the lower bounds for each parameter.}

\item{upper_bound}{Numeric vector, the upper bounds for each parameter.}

\item{xtol_rel}{Numeric, the relative tolerance for optimization convergence. Defaults to 0.00001.}

\item{num_threads}{Integer, the number of threads to use for parallel computation.}
}
\value{
Returns the result of the MCEM grid calculation as a numeric matrix.
}
\description{
This function performs a Monte Carlo Expectation-Maximization (MCEM) grid calculation
for given parameters, using Rcpp for improved performance. It is designed to work
with the 'emphasis' package.
}
\examples{
# Define parameters for the MCEM grid calculation
pars_R <- matrix(runif(20), nrow = 5) # Example parameter matrix
brts <- runif(10, 0, 1) # Example branching times
sample_size <- 100
maxN <- 1000
lower_bound <- rep(0, ncol(pars_R))
upper_bound <- rep(1, ncol(pars_R))
result <- mcemGridCalculation(pars_R, brts, sample_size, maxN, 2, 1e4, 1e4, lower_bound, upper_bound, 0.00001, 1)
print(result)
}
